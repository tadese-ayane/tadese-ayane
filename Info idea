
# Security

Many people don't realize that the markdown format does not prioritize security. In many cases, you have to pass the output to sanitizers. `markdown-it` provides two possible strategies to produce safe output:

1. Don't enable HTML. Extend markup features with [plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin). This approach satisfies 99% of user needs.
   - Output will be safe without a sanitizer.
2. Enable HTML and use an external sanitizer package.

By default, `markdown-it` also prohibits certain types of links that could be used for XSS:

- `javascript:`, `vbscript:`
- `file:`
- `data:`, except for some images (gif/png/jpeg/webp).

Therefore, by default, `markdown-it` should be safe. We prioritize security.

If you find a security issue, please contact us via the issue tracker or email. Such reports are fixed with top priority.

## Plugins

Usually, plugins operate with tokenized content, and that's enough to provide safe output.

However, there is one non-evident case you should know - don't allow plugins to generate arbitrary element `id` and `name`. If those depend on user input, always add prefixes to avoid DOM clobbering. See [discussion](https://github.com/markdown-it/markdown-it/issues/28) for details.

So, if you decide to use plugins that add extended class syntax or auto-generating header anchors, be careful.
